map "https://fhir.demo.smartregister.org/fhir/StructureMap/1167492f-bdd6-46d4-8a8d-7dd8d5ad3d3a" = 'PatientRegistration'

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireReponse" as source
uses "http://hl7.org/fhir/StructureDefinition/Patient" as target

group EirPatientRegistration(source src: QuestionnaireResponse, target bundle: Bundle) {
    src -> bundle.id = uuid(),
        bundle.type = 'collection' "r_bundle_static";
    src -> bundle.entry as entry,
        entry.resource = create('RelatedPerson') as caregiver then
            ExtractRelatedPerson(src, caregiver, bundle) "r_bundle";
}

group ExtractRelatedPerson(source src: QuestionnaireResponse, target caregiver: RelatedPerson, target bundle: Bundle) {
    src -> caregiver.id = uuid() "r_related_person_id";

	src.item where(linkId = 'is-edit-profile' and (answer.exists().not() or answer.value = false)) then {
		src -> bundle.entry as entry, entry.resource = create('Encounter') as encounter then
            ExtractEncounter(src, encounter, bundle),
            ExtractLocation(src, caregiver, encounter, bundle) "r_bundle_entries";
	} "r_is_edit_profile";



    src.item where(linkId = 'caregiver-id' and answer.value.exists()) then {
        src -> caregiver.id = create("id") as patient_id then {
            src -> patient_id.value = evaluate(src, $this.item.where(linkId='caregiver-id').answer.value.trim()) "r_related_person_id_value";
        } "r_related_person_cnd_id";
    } "r_related_person_id_value_check";

    src -> caregiver.active = true "r_related_person_active";

    src -> caregiver.identifier = create('Identifier') as clientId then {
        src -> clientId.use = "usual" "r_related_person_identifier_path_eir_id_use";
        src -> clientId.system = "https://fhir.demo.smartregister.org/fhir/eir-id" "r_related_person_identifier_path_eir_id_system";
        src -> clientId.value = evaluate(src, $this.item.where(linkId = '0d77d40f-098b-4329-9199-33b6e77aa864').answer.value) "r_related_person_identifier_path_eir_id_value";
    } "r_related_person_identifier_path_eir_id";

    src -> caregiver.name = create('HumanName') as patientName then {
        src -> patientName.use = 'official' "r_related_person_name_use";
        src -> patientName.text = evaluate(src, ($this.item.where(linkId = '9d017fa4-56d3-4d9b-b5f6-f9b3ba7d17a3').answer.value | $this.item.where(linkId = '7b41d922-376c-49bf-f6a8-faaa681e9ef6').answer.value | $this.item.where(linkId = '76bad83a-f061-4b22-8b4f-a95cbd5be4da').answer.value).join(' ').trim()) "r_related_person_name_full";

        src -> patientName.given = evaluate(src, ($this.item.where(linkId = '9d017fa4-56d3-4d9b-b5f6-f9b3ba7d17a3').answer.value.trim())) "r_related_person_name_given_first";

        src.item where(linkId = '7b41d922-376c-49bf-f6a8-faaa681e9ef6' and answer.value.exists()) then {
            src -> patientName.given = evaluate(src, $this.item.where(linkId = '7b41d922-376c-49bf-f6a8-faaa681e9ef6').answer.value.trim()) "r_related_person_name_given_middle";
        } "r_related_person_name_given_middle_check";

        src -> patientName.family = evaluate(src, $this.item.where(linkId = '76bad83a-f061-4b22-8b4f-a95cbd5be4da').answer.value.trim()) "r_related_person_family_name_family";
    } "r_related_person_name";

    src.item as patientDob where(linkId = 'aa1ddb98-87a4-48a6-9d8c-4c80de1ec277') then {
        patientDob.answer first as birthDate then {
            birthDate.value as val -> caregiver.birthDate = val "r_related_person_dob_answer_value";
        } "r_related_person_dob_answer";
    } "r_related_person_dob";

        src.item where(linkId = '8ebf5364-6bdc-4e45-89a7-28c65ce019b7' and answer.value > 0) then {
            src.item as relatedPersonAge where(linkId = '8ebf5364-6bdc-4e45-89a7-28c65ce019b7') -> caregiver.birthDate = evaluate(relatedPersonAge, today() - (($this.answer.value * 365 + 1).toString() + " days").toQuantity()) "r_related_person_age_years";
        } "r_related_person_age";

    src.item where(linkId = '50330b11-c520-4f45-a8f4-44771097788d' and answer.value.code = "male") then {
        src -> caregiver.gender = "male" "r_related_person_gender_male";
    } "r_related_person_gender_male";

    src.item where(linkId = '50330b11-c520-4f45-a8f4-44771097788d' and answer.value.code = "female") then {
        src -> caregiver.gender = "female" "r_related_person_gender_female";
    } "r_related_person_gender_female";

    src.item where(linkId = '50330b11-c520-4f45-a8f4-44771097788d' and answer.value.code = "biological-sex-not-specified") then {
        src -> caregiver.gender = "other" "r_related_person_gender_unspecified";

        src -> caregiver.extension = create('Extension') as extension then {
            src -> extension.url = "http://example.org/sexual-orientation" "r_related_person_gender_unspecified_url";
            src -> extension.value = create('CodeableConcept') as concept then {
                src -> concept.coding = c("http://terminology.hl7.org/CodeSystem/v3-NullFlavor", "OTH") as coding then {
                    src -> coding.display = 'Other' "r_related_person_gender_unspecified_ext_coding_display";
                } "r_related_person_gender_unspecified_ext_coding";

                src -> concept.coding = c("http://example.org/sexual-orientation", "NA") as coding then {
                    src -> coding.display = 'Biological sex not specified' "r_related_person_gender_unspecified_ext_orientation_coding_display";
                } "r_related_person_gender_unspecified_ext_orientation_coding";
                src -> concept.text = 'Unspecified' "r_related_person_gender_unspecified_ext_orientation_coding_text";
            } "r_related_person_gender_unspecified_ext_value";
        } "r_related_person_gender_unspecified_ext";
    } "r_related_person_gender_unspecified";

    src.item where(linkId = '50330b11-c520-4f45-a8f4-44771097788d' and answer.value.code = "intersex") then {
        src -> caregiver.gender = "other" "r_related_person_gender_intersex";

        src -> caregiver.extension = create('Extension') as extension then {
            src -> extension.url = "http://example.org/sexual-orientation" "r_related_person_gender_intersex_url";
            src -> extension.value = create('CodeableConcept') as concept then {
                src -> concept.coding = c("http://terminology.hl7.org/CodeSystem/v3-NullFlavor", "OTH") as coding then {
                    src -> coding.display = 'Other' "r_related_person_gender_intersex_ext_coding_display";
                } "r_related_person_gender_intersex_ext_coding";

                    src -> concept.coding = c("http://example.org/sexual-orientation", "NA") as coding then {
                        src -> coding.display = 'Intersex' "r_related_person_gender_intersex_ext_orientation_coding_display";
                    } "r_related_person_gender_intersex_ext_orientation_coding";
                    src -> concept.text = 'Intersex' "r_related_person_gender_intersex_ext_orientation_coding_text";
                } "r_related_person_gender_intersex_ext_value";
            } "r_related_person_gender_intersex_ext";
        } "r_related_person_gender_intersex";

    src.item where(linkId = '8d420cab-a72b-4190-ff05-306135edb39e' and answer.value.exists()) then {
        src -> caregiver.identifier = create('Identifier') as nationalIdNumber then {
            src -> nationalIdNumber.use = "official" "r_related_person_identifier_national_id_use";
            src -> nationalIdNumber.system = evaluate(src, $this.item.where(linkId = '59d21749-f4d7-4725-bec5-e924d3ce1eeb').answer.value.system) "r_related_person_identifier_national_id_system";
            src -> nationalIdNumber.value = evaluate(src, $this.item.where(linkId = '8d420cab-a72b-4190-ff05-306135edb39e').answer.value) "r_related_person_identifier_national_id_value";
        } "r_related_person_identifier_national_id";
    } "r_related_person_identifier_national_id_check";

    src.item where(linkId = '30667e76-8f1c-452c-cecd-fb99dfea485c' and answer.value.exists()) then {
        src -> caregiver.identifier = create('Identifier') as vaccinationCardNumber then {
            src -> vaccinationCardNumber.use = "official" "r_related_person_identifier_vaccination_card_number_use";
            src -> vaccinationCardNumber.system = "https://fhir.demo.smartregister.org/fhir/vaccination-card-number" "r_related_person_identifier_vaccination_card_number_system";
            src -> vaccinationCardNumber.value = evaluate(src, $this.item.where(linkId = '30667e76-8f1c-452c-cecd-fb99dfea485c').answer.value) "r_related_person_identifier_vaccination_card_number_value";
        } "r_related_person_identifier_id_national_id";
    } "r_related_person_identifier_vaccination_card_number_check";

    src.item as item where($this.linkId.where(contains('06cbf2e9-3643-4c7b-80f6-f145126034da')).exists() and $this.answer.value.exists()) then {
        src -> caregiver.telecom = create('ContactPoint') as relatedPersonContact then {
            src -> relatedPersonContact.value = evaluate(src, $this.item.where(linkId = '06cbf2e9-3643-4c7b-80f6-f145126034da').answer.value) "r_related_person_tel_num";
            src -> relatedPersonContact.system = "phone" "r_related_person_tel_sys";
        } "r_related_person_tel";
    }  "r_related_person_tel";

    src -> caregiver.address = create('Address') as patientAddress then {
        src -> patientAddress.use = "home" "r_related_person_address_use";
        src -> patientAddress.type = "physical" "r_related_person_address_type";
        src -> patientAddress.text = evaluate(src, $this.item.where(linkId ='73e1680b-23f6-41b4-c0d7-7f14b8b6a758').answer.value) "r_related_person_address_text_home_address";
    } "r_related_person_address";
}

group ExtractEncounter(source src: QuestionnaireResponse, target encounter: Encounter, target bundle: Bundle) {
    src -> encounter.id = uuid(),
        encounter.status = 'finished',
        encounter.class = c("http://terminology.hl7.org/CodeSystem/v3-ActCode", "HH") "r_en_static";

    src -> encounter.type = create('CodeableConcept') as concept then {
        src -> concept.coding = create("Coding") as coding then {
            src -> coding.system = "http://smartregister.org" "r_en_type_coding_system";
            src -> coding.code = "184048005" "r_en_type_coding_code";
            src -> coding.display = "Registration" "r_en_type_coding_display";
        } "r_en_type_coding";
        src -> concept.text = "Registration" "r_en_type_text";
    } "r_en_type";

    src -> encounter.priority = create('CodeableConcept') as concept then {
        src -> concept.coding = create("Coding") as coding then {
            src -> coding.system = "http://terminology.hl7.org/ValueSet/v3-ActPriority" "r_en_priority_coding_system";
            src -> coding.code = "EL" "r_en_priority_coding_code";
            src -> coding.display = "elective" "r_en_priority_coding_display";
        } "r_en_priority_coding";
        src -> concept.text = 'elective' "r_en_priority_text";
    } "r_en_priority";

    src -> encounter.period = create('Period') as enPeriod then {
        src -> enPeriod.start = evaluate(src, now()) "r_en_period_start";
        src -> enPeriod.end = evaluate(src, now()) "r_en_period_end";
    } "r_en_period";

    src -> encounter.reasonCode = create('CodeableConcept') as concept then {
        src -> concept.coding = create("Coding") as coding then {
            src -> coding.system = "http://smartregsiter.org/" "r_en_reason_code_coding_system";
            src -> coding.code = "patient_registration" "r_en_reason_code_coding_code";
            src -> coding.display = "Patient Registration" "r_en_reason_code_coding_display";
        } "r_en_reason_code_coding";
        src -> concept.text = 'Patient Registration' "r_en_reason_code_text";
    } "r_en_reason_code";
}

group ExtractLocation(source src : QuestionnaireResponse, source caregiver: RelatedPerson, target encounter: Encounter, target bundle: Bundle){
    src.item as locationWidgetItem where(linkId = 'location-widget') then {
        locationWidgetItem.item as itemLatitude where(linkId='latitude') then {
            locationWidgetItem.item as itemLongitude where(linkId='longitude') then {
                src where (itemLatitude.answer.exists() and itemLongitude.answer.exists()) -> bundle.entry as entry, entry.resource = create("Location") as servicePointLocation then {
                    src -> servicePointLocation.id = uuid() "r_loc_id";
                    src -> servicePointLocation.name = evaluate(caregiver, $this.name[0].text + " Location") "r_loc_name";

                    src -> servicePointLocation.position = create("Location_Position") as position then {
                        src -> position.latitude = evaluate(src, itemLatitude.answer.value) "r_loc_position_latitude";
                        src -> position.longitude = evaluate(src, itemLongitude.answer.value) "r_loc_position_longitude";
                    } "r_loc_position";

                    src -> servicePointLocation.type = create('CodeableConcept') as concept then {
                        src -> concept.coding = create("Coding") as coding then {
                            src -> coding.system = "http://terminology.hl7.org/CodeSystem/v3-RoleCode" "r_loc_type_coding_system";
                            src -> coding.code = "238497" "r_loc_type_coding_code";
                            src -> coding.display = "Caregiver Location" "r_loc_type_coding_display";
                        } "r_loc_type_coding";
                        src -> concept.text = 'Caregiver Location' "r_loc_type_text";
                    } "r_loc_type";

                    src -> encounter.location = create("Encounter_Location") as location then {
                        src -> location.location = reference(servicePointLocation) "r_loc_location_reference";
                    } "r_loc_location";

                    src then ExtractList(src, caregiver, servicePointLocation, bundle) "r_loc_extract_list";
                } "r_loc_extract_coordinates";
            } "r_loc_longitude_check";
        } "r_loc_latitude_check";
    } "r_loc_widget_check";
}

group ExtractList(source src : QuestionnaireResponse, source caregiver: RelatedPerson, source location: Location, target bundle: Bundle){
    src -> bundle.entry as entry, entry.resource = create('List') as list then {
        src -> list.id = uuid(),
            list.status = "current",
            list.title = "Caregiver" "r_list_static";

        src -> list.subject = reference(location) "r_list_subject";
        src -> list.code = create('CodeableConcept') as concept then {
            src -> concept.coding = create('Coding') as coding then {
                src -> coding.system = "http://smartregister.org/" "r_list_code_coding_system";
                src -> coding.code = "234234435" "r_list_code_coding_code";
                src -> coding.display = "Caregivers" "r_list_code_coding_display";
            } "r_list_code_coding";
            src -> concept.text = "Caregiver location" "r_list_code_text";
        } "r_list_code";

        src -> list.entry = create('List_Entry') as listEntry then {
            src -> listEntry.flag = create('CodeableConcept') as concept then {
                src -> concept.coding = create('Coding') as coding then {
                    src -> coding.system = "http://smartregister.org/" "r_list_entry_flag_coding_system";
                    src -> coding.code = "22138876" "r_list_entry_flag_coding_code";
                    src -> coding.display = "Caregivers" "r_list_entry_flag_coding_display";
                } "r_list_entry_flag_coding";
                src -> concept.text = "Caregivers" "r_list_entry_flag_text";
            } "r_list_entry_flag";
            src -> listEntry.date = evaluate(src, now()) "r_list_entry_date";
            src -> listEntry.item = reference(caregiver) "r_list_entry_item";
        } "r_list_entry";
    } "r_list";
}